!function(n){var e={};function t(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return n[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=n,t.c=e,t.d=function(exports,n,e){t.o(exports,n)||Object.defineProperty(exports,n,{enumerable:!0,get:e})},t.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(o,a,function(e){return n[e]}.bind(null,a));return o},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./tmpjs/webcomponents.js")}({"./tmpjs/base/util.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nmodule.exports = function (include) {\n  if (typeof include === \'function\') {\n    include();\n  } else if (_typeof(include) === \'object\') {\n    Object.keys(include).forEach(function (key) {\n      if (typeof include[key] === \'function\') {\n        include[key]();\n      }\n    });\n  }\n};\n\n//# sourceURL=webpack:///./tmpjs/base/util.js?')},"./tmpjs/components/modal.js":function(module,exports,__webpack_require__){eval("var name;\n/**\n * Generates the modal window on the first call.\n * @param {string} html - content to inject into the modal body\n * @param {boolean} fsOnMobile - if this is true, modal will be full screen on mobile\n * @param {Object} options - Options for the modal window\n */\n\nfunction createModalHtmlElement(html, fsOnMobile, options) {\n  var utils = __webpack_require__(/*! ./utils */ \"./tmpjs/components/utils.js\");\n\n  var modalOptions = options || {};\n  var $modal = $('#' + name);\n\n  if ($modal.length !== 0) {\n    $modal.remove();\n  }\n\n  var closeButton = '<button type=\"button\" class=\"close\" data-dismiss=\"modal\">' + '<svg viewBox=\"0 0 32 32\"><use xlink:href=\"#close-x\"></use></svg>' + '</button>';\n  var htmlHead = closeButton;\n\n  if (modalOptions.logo === true) {\n    htmlHead = '<div class=\"modal-header notification__header\">' + utils.generateSvgString('puma-logo', 'notification__logo__icon') + closeButton + '</div>';\n  }\n\n  var htmlString = '\x3c!-- Modal --\x3e' + '<div class=\"modal fade ' + (fsOnMobile ? 'modal-fs-mobile' : '') + '\" id=\"' + name + '\" role=\"dialog\">' + '<div class=\"modal-dialog\">' + '\x3c!-- Modal content--\x3e' + '<div class=\"modal-content\">' + htmlHead + '<div class=\"modal-body\">' + html + '</div>' + '</div>' + '</div>' + '</div>';\n  $('body').append(htmlString);\n}\n/**\n * Generates the full screen modal window on the first call.\n * @param {HTML} html - content to inject into the modal body\n */\n\n\nfunction createFsModalHtmlElement(html) {\n  var $modal = $('#' + name);\n\n  if ($modal.length !== 0) {\n    $modal.remove();\n  }\n\n  var htmlString = '\x3c!-- Modal --\x3e' + '<div class=\"modal fade modal-fs\" id=\"' + name + '\" role=\"dialog\">' + '<div class=\"modal-dialog\">' + '\x3c!-- Modal content--\x3e' + '<div class=\"modal-content\">' + '<button type=\"button\" class=\"modal-fs__close\" data-dismiss=\"modal\">' + '<svg viewBox=\"0 0 32 32\" class=\"modal-fs__close__icon\"><use xlink:href=\"#close-x\"></use></svg>' + '</button>' + '<div class=\"modal-body modal-fs__body\">' + html + '</div>' + '</div>' + '</div>' + '</div>';\n  $('body').append(htmlString);\n}\n\nmodule.exports = {\n  create: function create(modalName, html, fsOnMobile, options) {\n    var modalOptions = options || {};\n    name = modalName.split(' ').join('-');\n    createModalHtmlElement(html, fsOnMobile, modalOptions);\n  },\n  createFs: function createFs(modalName, html) {\n    name = modalName.split(' ').join('-');\n    createFsModalHtmlElement(html);\n  },\n  show: function show() {\n    $('#' + name).modal('show');\n  },\n  hide: function hide() {\n    $('#' + name).modal('hide');\n  },\n  startSpinner: function startSpinner() {\n    $('#' + name + ' .modal-body').spinner().start();\n  },\n  stopSpinner: function stopSpinner() {\n    $.spinner().stop();\n  }\n};\n\n//# sourceURL=webpack:///./tmpjs/components/modal.js?")},"./tmpjs/components/utils.js":function(module,exports,__webpack_require__){"use strict";eval("\n/**\n * Create a cookie with a name, value, and expiration\n * @param {string} cName name of the cookie (used to retrieve later)\n * @param {string} value of cookie to be stored\n * @param {number} exdays - number of days the cookie should exist before expiring\n */\n\nfunction createCookie(cName, value, exdays) {\n  var exdate = new Date();\n  exdate.setDate(exdate.getDate() + exdays);\n  var cValue = escape(value);\n  cValue += exdays === null ? '' : '; expires=' + exdate.toUTCString();\n  cValue += '; path=/';\n  document.cookie = cName + '=' + cValue;\n}\n/**\n * Get a cookie value by name\n * @param {string} cName name of cookie\n * @returns {string} value of cookie\n */\n\n\nfunction getCookie(cName) {\n  var i;\n  var x;\n  var y;\n  var ARRcookies = document.cookie.split(';');\n  var returnval = '';\n\n  for (i = 0; i < ARRcookies.length; i++) {\n    x = ARRcookies[i].substr(0, ARRcookies[i].indexOf('='));\n    y = ARRcookies[i].substr(ARRcookies[i].indexOf('=') + 1);\n    x = x.replace(/^\\s+|\\s+$/g, '');\n\n    if (x === cName) {\n      returnval = unescape(y);\n    }\n  }\n\n  return returnval;\n}\n/**\n * Erase cookie\n * @param {string} cName name of the cookie\n */\n\n\nfunction eraseCookie(cName) {\n  document.cookie = cName + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/';\n}\n/**\n * Generate an SVG string of markup\n * @param {string} iconId name of cookie\n * @param {string} iconClass to attach to the SVG\n * @returns {string} of HTML\n */\n\n\nfunction generateSvgString(iconId, iconClass) {\n  var svgClass = iconClass || '';\n  return '<svg viewBox=\"0 0 100 100\" class=\"' + svgClass + '\">' + '<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#' + iconId + '\"></use>' + '</svg>';\n}\n/**\n * Append a parameter to a url\n * @param {string} url - a url\n * @param {string} name - key\n * @param {string} value - value\n * @return {string} url with param appended\n */\n\n\nfunction appendParamToURL(url, name, value) {\n  var c = '?';\n  var hash = '';\n  var baseUrl = url;\n\n  if (baseUrl.indexOf(c) !== -1) {\n    c = '&';\n  }\n\n  if (baseUrl.indexOf('#') !== -1) {\n    var urlParts = baseUrl.split('#');\n    baseUrl = urlParts[0];\n    hash = urlParts[1];\n  }\n\n  var resultUrl = baseUrl + c + name + '=' + encodeURIComponent(value);\n\n  if (hash.length) {\n    resultUrl += '#' + hash;\n  }\n\n  return resultUrl;\n}\n/**\n * Append parameters to a url\n * @param {string} url - a url\n * @param {string} params - key/value pairs\n * @return {string} url with param appended\n */\n\n\nfunction appendParamsToURL(url, params) {\n  var resultUrl = url;\n  Object.keys(params).forEach(function (name) {\n    resultUrl = appendParamToURL(resultUrl, name, params[name]);\n  });\n  return resultUrl;\n}\n/**\n * Helper function for getParamsFromURL. Split a url string into key/value pairs.\n * @param {string} str - url parameter string\n * @return {Object} object with params split into key/value pairs\n */\n\n\nfunction keyValueArray(str) {\n  var kvp = str.split('&');\n  var x;\n  var k;\n  var v;\n  var output = {};\n\n  for (var i = kvp.length - 1; i >= 0; i--) {\n    if (kvp[i].length) {\n      // No empty strings...\n      x = kvp[i].split('=');\n      k = x[0];\n      v = '';\n\n      if (x.length > 1) {\n        v = x[1];\n      }\n\n      output[k] = decodeURIComponent(v);\n    }\n  }\n\n  return output;\n}\n/**\n * Split a url string into key/value pairs.\n * @param {string} url - url parameter string\n * @return {Object} object with params split into key/value pairs\n */\n\n\nfunction getParamsFromURL(url) {\n  var arr = url.split('?');\n  var search = '';\n  var searchHash = '';\n  var postHash = false;\n\n  if (arr.length > 1) {\n    var arrHash = arr[1].split('#');\n    search = arrHash[0];\n\n    if (arrHash.length > 1) {\n      postHash = true;\n      searchHash = arrHash[1];\n    }\n  }\n\n  var output = {};\n\n  if (search.length) {\n    output = keyValueArray(search);\n  }\n\n  if (postHash) {\n    if (searchHash.length) {\n      var output2 = keyValueArray(searchHash);\n      Object.keys(output2).forEach(function (prop) {\n        output[prop] = output2[prop]; // Merge them...\n      });\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = {\n  createCookie: createCookie,\n  getCookie: getCookie,\n  eraseCookie: eraseCookie,\n  generateSvgString: generateSvgString,\n  appendParamToURL: appendParamToURL,\n  keyValueArray: keyValueArray,\n  getParamsFromURL: getParamsFromURL,\n  appendParamsToURL: appendParamsToURL\n};\n\n//# sourceURL=webpack:///./tmpjs/components/utils.js?")},"./tmpjs/webcomponents.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar processInclude = __webpack_require__(/*! ./base/util */ "./tmpjs/base/util.js");\n\n$(document).ready(function () {\n  processInclude(__webpack_require__(/*! ./webcomponents/webcomponents */ "./tmpjs/webcomponents/webcomponents.js"));\n});\n\n//# sourceURL=webpack:///./tmpjs/webcomponents.js?')},"./tmpjs/webcomponents/webcomponents.js":function(module,exports,__webpack_require__){"use strict";eval("\n/**\n * Only calls the callback if there is \"pumastore\" object\n * @param {Function} callback A callback function\n */\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction pumastoreGuard(callback) {\n  if ((typeof pumastore === \"undefined\" ? \"undefined\" : _typeof(pumastore)) === 'object' && typeof callback === 'function') {\n    /* global pumastore */\n    callback(pumastore);\n  }\n}\n/**\n * Enables live chat from web component\n */\n\n\nfunction enableLiveChat() {\n  if (webComponentsEventBus) {\n    webComponentsEventBus.dispatchEvent('usermenu.toggleLink', {\n      id: 'live-chat',\n      visible: true\n    });\n  }\n}\n/**\n * Disables live chat from web component\n */\n\n\nfunction disableLiveChat() {\n  if (webComponentsEventBus) {\n    webComponentsEventBus.dispatchEvent('usermenu.toggleLink', {\n      id: 'live-chat',\n      hidden: true\n    });\n  }\n}\n\nmodule.exports = {\n  minicartSupport: function minicartSupport() {\n    pumastoreGuard(function (pumastore) {\n      $('.mini-cart').on('count:update', function (event, minicartResponse) {\n        pumastore.set('cartCount', {\n          count: minicartResponse.quantityTotal,\n          initial: true\n        });\n      });\n    });\n  },\n  wishlistSupport: function wishlistSupport() {\n    // Update usermenu component\n    $('body').on('product:afterRemoveFromWishlist', function () {}); // Update usermenu component\n\n    $('body').on('product:afterAddToWishlist', function () {});\n  },\n  linkFooterEmailSignUp: function linkFooterEmailSignUp() {\n    /* global webComponentsEventBus */\n    $.when(function () {\n      var dfd = new jQuery.Deferred();\n\n      if (typeof webComponentsEventBus !== 'undefined') {\n        dfd.resolve(webComponentsEventBus);\n      } else {\n        window.addEventListener('webComponentsEventBusReady', function () {\n          dfd.resolve(webComponentsEventBus);\n        });\n      }\n\n      return dfd;\n    }).then(function () {\n      webComponentsEventBus.addEventListener('newsletter-signup.open', function (event) {\n        var modal = __webpack_require__(/*! ../components/modal */ \"./tmpjs/components/modal.js\");\n        /* global emailSignUpAction */\n\n\n        if (typeof emailSignUpAction !== 'undefined') {\n          var email = event.detail.email;\n          var controllerUrl = emailSignUpAction;\n          $.ajax({\n            url: controllerUrl,\n            type: 'POST',\n            data: {\n              email: email\n            },\n            success: function success(html) {\n              modal.create('emailSignupModal', html, true);\n              modal.show();\n            },\n            error: function error() {\n              window.console.log('Email signup failure');\n            }\n          });\n        }\n      });\n    });\n  },\n  cartQuantityChange: function cartQuantityChange() {\n    pumastoreGuard(function (pumastore) {\n      $('body').on('cart.quantityUpdated', function (event, productID, quantity, numItems) {\n        // quantity - the line time quantity\n        // numItems - all items in cart\n        pumastore.set('cartCount', {\n          count: numItems,\n          initial: false\n        });\n      });\n    });\n  },\n  toggleLiveChat: function toggleLiveChat() {\n    var $livechatButton = $('.livechat-button').eq(0); // Live Chat button cannot be find\n\n    if ($livechatButton.length === 0) {\n      return false;\n    } // The livechat state is off\n\n\n    if ($livechatButton.css('display') === 'none') {\n      disableLiveChat();\n    } else {\n      // Live chat is on\n      enableLiveChat();\n    }\n\n    var targetNode = document.querySelector('.livechat-online');\n    var config = {\n      attributes: true,\n      attributeFilter: ['style']\n    };\n\n    var callback = function callback(mutationsList) {\n      Object.keys(mutationsList).forEach(function (key) {\n        var mutation = mutationsList[key];\n\n        if (mutation.type === 'attributes') {\n          if (mutation.attributeName === 'style') {\n            if (mutation.target.style.display === 'none') {\n              disableLiveChat();\n            } else {\n              enableLiveChat();\n            }\n          }\n        }\n      });\n    }; // Create an observer instance linked to the callback function\n\n\n    var observer = new MutationObserver(callback); // Start observing the target node for configured mutations\n\n    observer.observe(targetNode, config);\n    return true;\n  },\n  bindLiveChatClick: function bindLiveChatClick() {\n    if (webComponentsEventBus) {\n      webComponentsEventBus.addEventListener('livechat.open', function () {\n        jQuery('.livechat-online').trigger('click');\n      });\n    }\n  }\n};\n\n//# sourceURL=webpack:///./tmpjs/webcomponents/webcomponents.js?")}});